from telegram import Update, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes
import asyncio

import config
from database import get_user, set_subscription_status, add_tokens
from services.subscription import subscription_service
from handlers.start import show_main_menu

async def check_subscription_callback(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∫–∞–Ω–∞–ª"""
    query = update.callback_query
    await query.answer()
    
    user_id = update.effective_user.id
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
    is_subscribed = await subscription_service.check_subscription(user_id)
    
    if is_subscribed or config.TEST_MODE:  # –í —Ç–µ—Å—Ç–æ–≤–æ–º —Ä–µ–∂–∏–º–µ –∏–ª–∏ –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ –ø–æ–¥–ø–∏—Å–∫–∏
        user = await get_user(user_id)
        if not user.is_subscribed:  # –ï—Å–ª–∏ –±–æ–Ω—É—Å –µ—â–µ –Ω–µ –±—ã–ª –ø–æ–ª—É—á–µ–Ω
            # –ù–∞—á–∏—Å–ª—è–µ–º –±–æ–Ω—É—Å–Ω—ã–µ —Ç–æ–∫–µ–Ω—ã
            await add_tokens(user_id, config.FREE_TOKENS)
            # –û—Ç–º–µ—á–∞–µ–º —á—Ç–æ –ø–æ–¥–ø–∏—Å–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞
            await set_subscription_status(user_id, True)
            
            # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            user = await get_user(user_id)
            
            # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –±–ª–∞–≥–æ–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await query.edit_message_text(
                text=(
                    "üéâ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–ø–∏—Å–∫—É!\n\n"
                    f"üéÅ –í–∞–º –Ω–∞—á–∏—Å–ª–µ–Ω–æ {config.FREE_TOKENS} –ú–∞–π–Ω–¥—Ç–æ–∫–µ–Ω–æ–≤ –≤ –ø–æ–¥–∞—Ä–æ–∫.\n"
                    f"üíé –í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {user.tokens} –ú–∞–π–Ω–¥—Ç–æ–∫–µ–Ω–æ–≤.\n\n"
                    f"–≠—Ç–æ–≥–æ —Ö–≤–∞—Ç–∏—Ç –Ω–∞ {user.tokens // config.TOKENS_PER_MESSAGE} –≤–æ–ø—Ä–æ—Å–æ–≤."
                )
            )
            
            # –ß–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –ø–∞—É–∑—É –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            await asyncio.sleep(2)
            await show_main_menu(update, context, user, show_description=True)
        else:
            # –ï—Å–ª–∏ –±–æ–Ω—É—Å —É–∂–µ –±—ã–ª –ø–æ–ª—É—á–µ–Ω, –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
            await show_main_menu(update, context, user, show_description=True)
    else:
        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω, –ø—Ä–µ–¥–ª–∞–≥–∞–µ–º –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
        channel_link = subscription_service.get_channel_link()
        
        keyboard = [
            [InlineKeyboardButton("üì¢ –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –∫–∞–Ω–∞–ª", url=channel_link)],
            [InlineKeyboardButton("‚úÖ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É", callback_data="check_subscription")]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        
        await query.edit_message_text(
            text=(
                "‚ö†Ô∏è –í—ã –µ—â–µ –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª.\n\n"
                f"–ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª –∏ –ø–æ–ª—É—á–∏—Ç–µ {config.FREE_TOKENS} –ú–∞–π–Ω–¥—Ç–æ–∫–µ–Ω–æ–≤ –±–µ—Å–ø–ª–∞—Ç–Ω–æ!\n"
                f"–≠—Ç–æ–≥–æ —Ö–≤–∞—Ç–∏—Ç –Ω–∞ {config.FREE_TOKENS // config.TOKENS_PER_MESSAGE} –≤–æ–ø—Ä–æ—Å–æ–≤."
            ),
            reply_markup=reply_markup
        ) 